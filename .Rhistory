sortedHF <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedP <- subset(
complist[order(complist$State, complist$Pneumonia,
complist$Hospital, na.last=NA),])
tail(subset(sortedP, State == "WY"),1)[,1]
rankall <- function(outcome, num = "best") {
## Read outcome data
outcomedata <- read.csv("outcome-of-care-measures.csv")
complist <- suppressWarnings(data.frame(Hospital = outcomedata[,2],
State = outcomedata[,7],
HeartAttack = as.numeric(outcomedata[,11]),
HeartFailure = as.numeric(outcomedata[,17]),
Pneumonia = as.numeric(outcomedata[,23])))
## Check that outcome is valid
if(sum(stri_count_fixed(outcome,c("heart attack", "heart failure", "pneumonia"))) ==0){
stop("invalid outcome")
}
## check that rank is valid
if( num != "best" && num !="worst" && class(num) != "numeric") {
stop("invalid rank - not one of 'best', 'worst', or numeric")
}
## created sorted data.frames based on selected outcome
sortedHA <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedHF <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedP <- subset(
complist[order(complist$State, complist$Pneumonia,
complist$Hospital, na.last=NA),])
## For each state, find the hospital of the given rank
result <- data.frame("hospital" = NULL, "state" = NULL)
## Find best state if num == "best"
if(num == "best")
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHA, State == i)[1,1],
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHF, State == i)[1,1],
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedP, State == i)[1,1],
"state" = i))
}
}
else
if(num == "worst") {
if(outcome == "heart attack") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHA, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "heart failure") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHF, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "pneumonia") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedP, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
}
## For each state, find the hospital of the given rank
if(num != "best" && num != "worst") {
statesplit <- split(complist, complist$State)
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHA, State == i)[num,1],
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHF, State == i)[num,1],
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedP, State == i)[num,1],
"state" = i))
}
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result[order(result$state, na.last=NA),]
}
tail(rankall("pneumonia", "worst"), 3)
getwd()
rankall <- function(outcome, num = "best") {
## Check that outcome is valid
if(outcome !="heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## check that rank is valid
if( num != "best" && num !="worst" && class(num) != "numeric") {
stop("invalid rank - not one of 'best', 'worst', or numeric")
}
## set working directory to .../Assignment3
setwd("C:/Users/mordo/Documents/RProjects/Assignment3")
## note that this is only valid on my computer - deployment will need
## either replace this with a check that the data file exists in the wd
## or throw an error to tell the user to set the working directory to
## the location of the data file
## Read outcome data
outcomedata <- read.csv("outcome-of-care-measures.csv")
complist <- suppressWarnings(data.frame(Hospital = outcomedata[,2],
State = outcomedata[,7],
HeartAttack = as.numeric(outcomedata[,11]),
HeartFailure = as.numeric(outcomedata[,17]),
Pneumonia = as.numeric(outcomedata[,23])))
## created sorted data.frames based on selected outcome
sortedHA <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedHF <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedP <- subset(
complist[order(complist$State, complist$Pneumonia,
complist$Hospital, na.last=NA),])
## create data.frame to hold results
result <- data.frame("hospital" = NULL, "state" = NULL)
## For each state, find the hospital of the given rank
## Find best state if num == "best"
if(num == "best"){
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHA, State == i)[1,1],
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHF, State == i)[1,1],
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedP, State == i)[1,1],
"state" = i))
}
}
}
## find worst if num == "worst"
if(num == "worst") {
if(outcome == "heart attack") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHA, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "heart failure") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHF, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "pneumonia") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedP, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
}
## For each state, find the hospital of the given numerical rank
if(num != "best" && num != "worst") {
statesplit <- split(complist, complist$State)
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedHA, State == i)[num,1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedHF, State == i)[num,1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedP, State == i)[num, 1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result[order(result$state, na.last=NA),]
}
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
outcomedata <- read.csv("outcome-of-care-measures.csv")
complist <- suppressWarnings(data.frame(Hospital = outcomedata[,2],
State = outcomedata[,7],
HeartAttack = as.numeric(outcomedata[,11]),
HeartFailure = as.numeric(outcomedata[,17]),
Pneumonia = as.numeric(outcomedata[,23])))
## created sorted data.frames based on selected outcome
sortedHA <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedHF <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedP <- subset(
complist[order(complist$State, complist$Pneumonia,
complist$Hospital, na.last=NA),])
subset(sortedHA, State == i)[20,1]
subset(sortedHA, State == "WY")[20,1]
sortedHA
subset(sortedHA, State == "AL")[20,1]
rankall <- function(outcome, num = "best") {
## Check that outcome is valid
if(outcome !="heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## check that rank is valid
if( num != "best" && num !="worst" && class(num) != "numeric") {
stop("invalid rank - not one of 'best', 'worst', or numeric")
}
## set working directory to .../Assignment3
setwd("C:/Users/mordo/Documents/RProjects/Assignment3")
## note that this is only valid on my computer - deployment will need
## either replace this with a check that the data file exists in the wd
## or throw an error to tell the user to set the working directory to
## the location of the data file
## Read outcome data
outcomedata <- read.csv("outcome-of-care-measures.csv")
complist <- suppressWarnings(data.frame(Hospital = outcomedata[,2],
State = outcomedata[,7],
HeartAttack = as.numeric(outcomedata[,11]),
HeartFailure = as.numeric(outcomedata[,17]),
Pneumonia = as.numeric(outcomedata[,23])))
## created sorted data.frames based on selected outcome
sortedHA <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedHF <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedP <- subset(
complist[order(complist$State, complist$Pneumonia,
complist$Hospital, na.last=NA),])
## create data.frame to hold results
result <- data.frame("hospital" = NULL, "state" = NULL)
## For each state, find the hospital of the given rank
## Find best state if num == "best"
if(num == "best"){
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHA, State == i)[1,1],
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHF, State == i)[1,1],
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedP, State == i)[1,1],
"state" = i))
}
}
}
## find worst if num == "worst"
if(num == "worst") {
if(outcome == "heart attack") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHA, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "heart failure") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHF, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "pneumonia") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedP, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
}
## For each state, find the hospital of the given numerical rank
if(num != "best" && num != "worst") {
statesplit <- split(complist, complist$State)
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedHA, State == i)[num,1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedHF, State == i)[num,1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedP, State == i)[num, 1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result[order(result$state, na.last=NA),]
}
subset(sortedHA, State == "AL")[20,1]
sortedHA
sortedHA <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedHA
rankall <- function(outcome, num = "best") {
## Check that outcome is valid
if(outcome !="heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
## check that rank is valid
if( num != "best" && num !="worst" && class(num) != "numeric") {
stop("invalid rank - not one of 'best', 'worst', or numeric")
}
## set working directory to .../Assignment3
setwd("C:/Users/mordo/Documents/RProjects/Assignment3")
## note that this is only valid on my computer - deployment will need
## either replace this with a check that the data file exists in the wd
## or throw an error to tell the user to set the working directory to
## the location of the data file
## Read outcome data
outcomedata <- read.csv("outcome-of-care-measures.csv")
complist <- suppressWarnings(data.frame(Hospital = outcomedata[,2],
State = outcomedata[,7],
HeartAttack = as.numeric(outcomedata[,11]),
HeartFailure = as.numeric(outcomedata[,17]),
Pneumonia = as.numeric(outcomedata[,23])))
## created sorted data.frames based on selected outcome
sortedHA <- subset(
complist[order(complist$State, complist$HeartAttack,
complist$Hospital, na.last=NA),])
sortedHF <- subset(
complist[order(complist$State, complist$HeartFailure,
complist$Hospital, na.last=NA),])
sortedP <- subset(
complist[order(complist$State, complist$Pneumonia,
complist$Hospital, na.last=NA),])
## create data.frame to hold results
result <- data.frame("hospital" = NULL, "state" = NULL)
## For each state, find the hospital of the given rank
## Find best state if num == "best"
if(num == "best"){
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHA, State == i)[1,1],
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedHF, State == i)[1,1],
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
result <- rbind(result,
data.frame("hospital" = subset(sortedP, State == i)[1,1],
"state" = i))
}
}
}
## find worst if num == "worst"
if(num == "worst") {
if(outcome == "heart attack") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHA, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "heart failure") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedHF, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
if(outcome == "pneumonia") {
for(i in unique(complist$State)) {
ihospital <- tail(subset(sortedP, State == i),1)[,1]
result <- rbind(result,
data.frame("hospital" = ihospital, "state" = i))
}
}
}
## For each state, find the hospital of the given numerical rank
if(num != "best" && num != "worst") {
statesplit <- split(complist, complist$State)
if(outcome == "heart attack"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedHA, State == i)[num,1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
if(outcome == "heart failure"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedHF, State == i)[num,1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
if(outcome == "pneumonia"){
for(i in unique(complist$State)) {
ihospital <- subset(sortedP, State == i)[num, 1]
result <- rbind(result,
data.frame("hospital" = ihospital,
"state" = i))
}
}
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
result[order(result$state, na.last=NA),]
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
beta(1,1)
rbeta(100,1,1)
plot(rbeta(100,1,1))
set.seed(1)
rpois(5, 2)
x <- rep(0:1, each = 5)
x
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
